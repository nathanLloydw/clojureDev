<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="6e7bc923-b1ae-46da-be0a-aba397afa4de" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/projects/projectFourA.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Clojure_1_9_0.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Clojure_1_9_0.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/imports/a_star_search.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/imports/a_star_search.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1S9U8HBt7LF9FHIExiidU0Io6RS" />
  <component name="PropertiesComponent">
    <property name="cursive.last.file.extension.C\:/Users/Nathan/Desktop/University/Year 4/AI/clojureDev/src" value="clj" />
    <property name="project.structure.last.edited" value="Global Libraries" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
  </component>
  <component name="ReplState" timestamp="1570982641740">{:repl-history {:ide [], :local [{:command &quot;(+ 1 2)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(canDo? 22 123 lmg)&quot;, :offset 19, :ns &quot;projects.recap&quot;} {:command &quot;(a*lmg {:state 1 :cost 2})&quot;, :offset 26, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [i [0 1 2 3]] (println i))&quot;, :offset 33, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes)&quot;, :offset 11, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes 'newcastle)&quot;, :offset 22, :ns &quot;projects.projectFourA&quot;} {:command &quot;(:cost (first (busRoutes 'Newcastle)))&quot;, :offset 38, :ns &quot;projects.projectFourA&quot;} {:command &quot;((first (busRoutes 'Newcastle)) :cost)&quot;, :offset 38, :ns &quot;projects.projectFourA&quot;} {:command &quot; {(first (busRoutes 'Newcastle)) :cost}&quot;, :offset 39, :ns &quot;projects.projectFourA&quot;} {:command &quot;(first (busRoutes 'Newcastle))&quot;, :offset 30, :ns &quot;projects.projectFourA&quot;} {:command &quot;(nth (busRoutes 'Newcastle) 3)&quot;, :offset 30, :ns &quot;projects.projectFourA&quot;} {:command &quot;((first (busRoutes 'darlington)))&quot;, :offset 33} {:command &quot;(first (busRoutes 'darlington))&quot;, :offset 31, :ns &quot;projects.projectFourA&quot;} {:command &quot;(:cost (first (busRoutes 'darlington)))&quot;, :offset 39, :ns &quot;projects.projectFourA&quot;} {:command &quot;(first busRoutes)&quot;, :offset 17, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0} {:state 80} a*lmg)&quot;, :offset 48, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0} 12 a*lmg)&quot;, :offset 39, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0} 50 a*lmg)&quot;, :offset 39, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [x [1 2 3]] (+ 1 x))&quot;, :offset 27, :ns &quot;user&quot;} {:command &quot;(doseq [x [1 2 3]] (println x))&quot;, :offset 31, :ns &quot;user&quot;} {:command &quot;(doseq [x [1 2 3]] (hash-map x))&quot;, :offset 32, :ns &quot;user&quot;} {:command &quot;(doseq [x ['{ Newcastle ({:location middlesbrough :cost 5} {:location darlington :cost 4} {:location durham :cost 4})\n             middlesbrough ({:location redcar :cost 2} {:location hartlepool :cost 2} {:location northallerton :cost 3} {:location newcastle :cost 5})\n             darlington ({:location newcaslte :cost 6} {:location middlesbrough :cost 3} {:location durham :cost 4} {:location northallerton :cost 2} {:location leeds :cost 7})\n             durham ({:location darlington :cost 3} {:location newcastle :cost 6})\n             northallerton ({:location durham :cost 4} {:location darlington :cost 5})\n             leeds ({:location manchester :cost 8} {:location york :cost 6} {:location wakefield :cost 3})\n             manchester ({:location liverpool :cost } {:location warrington :cost } {:location bolton :cost })\n             liverpool ( {:location warrington :cost } {:location manchester :cost } {:location chester :cost })\n             }]] (println x))&quot;, :offset 976, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [x [busRoutes]] (println x))&quot;, :offset 35, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [x [(busRoutes 'Newcastle)]] (println x))&quot;, :offset 48, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [x [(busRoutes :Newcastle)]] (println x))&quot;, :offset 48, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [x [(busRoutes :Newcastle)]] (hash-map x))&quot;, :offset 49, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location Newcastle :cost 0})&quot;, :offset 38, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes 'Newcastle)&quot;, :offset 22, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes 'middlesbrough)&quot;, :offset 26, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes :middlesbrough)&quot;, :offset 26, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location 'Newcastle :cost 0})&quot;, :offset 39, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location \&quot;Newcastle\&quot;  :cost 0})&quot;, :offset 41, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location \&quot;middlesbrough\&quot;  :cost 0})&quot;, :offset 45, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location \&quot;Newcastle\&quot;  :cost 2})&quot;, :offset 41, :ns &quot;projects.projectFourA&quot;} {:command &quot;(doseq [[k v] busRoutes :Newcastle] (prn k v))&quot;, :offset 46, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes (keyword location))&quot;, :offset 30, :ns &quot;projects.projectFourA&quot;} {:command &quot;(busRoutes (keyword \&quot;middlesbrough\&quot;))&quot;, :offset 37, :ns &quot;projects.projectFourA&quot;} {:command &quot;(hash-map :cost 5 :location \&quot;tmp\&quot;)&quot;, :offset 34, :ns &quot;projects.projectFourA&quot;} {:command &quot;(hash-map  :location \&quot;tmp\&quot; :cost 5)&quot;, :offset 35, :ns &quot;projects.projectFourA&quot;} {:command &quot;(hash-map  :location \&quot;tmp\&quot;, :cost 5)&quot;, :offset 36, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgA {:state 1 :cost 2})&quot;, :offset 27, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location \&quot;middlesbrough\&quot;  :cost 2})&quot;, :offset 45, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:location \&quot;Newcastle\&quot;, :cost 0} (fn [x] (= x 20)) a*lmgB)&quot;, :offset 68, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:location \&quot;Newcastle\&quot;, :cost 0} \&quot;liverpool\&quot; a*lmgB)&quot;, :offset 62, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:location \&quot;Newcastle\&quot;, :cost 0} (fn [x] (= x \&quot;liverpool\&quot;)) a*lmgB)&quot;, :offset 77, :ns &quot;projects.projectFourA&quot;} {:command &quot;(a*lmgB {:location \&quot;middlesbrough\&quot; :cost 2})&quot;, :offset 44, :ns &quot;projects.projectFourA&quot;} {:command &quot;(breadth-search- )&quot;, :offset 0} {:command &quot; (A*search {:state \&quot;Newcastle\&quot;, :cost 0} \&quot;liverpool\&quot; a*lmgB debug)&quot;, :offset 66, :ns &quot;projects.projectFourA&quot;} {:command &quot; (A*search {:state \&quot;Newcastle\&quot;, :cost 0} \&quot;liverpool\&quot; a*lmgB :debug)&quot;, :offset 67, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state \&quot;Newcastle\&quot;, :cost 0} \&quot;liverpool\&quot; a*lmgB)&quot;, :offset 59, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state \&quot;Newcastle\&quot;, :cost 0 :debug true} (fn [x] (= x \&quot;liverpool\&quot;)) a*lmgB)&quot;, :offset 86, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state \&quot;Newcastle\&quot;, :cost 0} (fn [x] (= x \&quot;liverpool\&quot;)) a*lmgB)&quot;, :offset 74, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0} (fn [x] (&gt; x 20)) a*lmgA)&quot;, :offset 55, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0 :debug true} (fn [x] (&gt; x 20)) a*lmgA)&quot;, :offset 67, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0} {:cost 20} a*lmgA)&quot;, :offset 48, :ns &quot;projects.projectFourA&quot;} {:command &quot;(A*search {:state 0, :cost 0} 20 a*lmgA)&quot;, :offset 40, :ns &quot;projects.projectFourA&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.RePl">
    <configuration name="RePl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="clojureDev" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="recap" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="clojureDev" />
      <setting name="path" value="$PROJECT_DIR$/src/projects/recap.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/projects" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Clojure Application.recap" />
      <item itemvalue="Clojure REPL.RePl" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure Application.recap" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6e7bc923-b1ae-46da-be0a-aba397afa4de" name="Default Changelist" comment="" />
      <created>1570975143386</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570975143386</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>